/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package lab1;

import com.jme3.app.SimpleApplication;
import com.jme3.light.DirectionalLight;
import com.jme3.material.Material;
import com.jme3.material.RenderState.BlendMode;
import com.jme3.math.ColorRGBA;
import com.jme3.math.Vector3f;
import com.jme3.renderer.queue.RenderQueue.Bucket;
import com.jme3.scene.Geometry;
import com.jme3.scene.shape.Box;
import com.jme3.scene.shape.Sphere;
import com.jme3.texture.Texture;
import com.jme3.asset.TextureKey;
import com.jme3.math.Quaternion;
import com.jme3.math.FastMath;
import com.jme3.util.TangentBinormalGenerator;
import com.jme3.bullet.control.RigidBodyControl;

public class MainApp extends SimpleApplication {

    private Geometry jupiterGeo;
    private Physics physics;
    private Geometry voyagerGeo;
    
    
    private void jupiterCreation()
    {
        Sphere sphereMesh = new Sphere(32, 32, 2f);
        jupiterGeo = new Geometry("Jupiter", sphereMesh);
        sphereMesh.setTextureMode(Sphere.TextureMode.Projected);
        
        Texture sphereTexture = assetManager.loadTexture("img/Jupiter.jpg");
        sphereTexture.setWrap(Texture.WrapMode.Repeat);
        Material sphereMat = new Material(assetManager, "Common/MatDefs/Misc/Unshaded.j3md");
        sphereMat.setTexture("ColorMap", sphereTexture);
        
        jupiterGeo.setMaterial(sphereMat);
        Quaternion roll180 = new Quaternion();
        roll180.fromAngleAxis( FastMath.PI , new Vector3f(-1,1,1) );
        /* The rotation is applied: The object rolls by 180 degrees. */
        jupiterGeo.setLocalRotation( roll180 );
        
    }
    
    
    private void voyagerCreation()
    {
        Box voyagerMesh = new Box(0.5f, 0.3f, 0.3f);
        voyagerGeo = new Geometry("Voyager", voyagerMesh);
        Material voyagerMat = new Material(assetManager, "Common/MatDefs/Misc/Unshaded.j3md");        
        voyagerMat.setColor("Color", ColorRGBA.Blue);
        voyagerGeo.setMaterial(voyagerMat);
        voyagerGeo.setLocalTranslation(-5f, 5f, 8f);        
    }

    
    
    @Override
    public void simpleInitApp() {
        flyCam.setMoveSpeed(15f);
        
        physics = new Physics();
        jupiterCreation();
        voyagerCreation();
        
        rootNode.attachChild(jupiterGeo);
        rootNode.attachChild(voyagerGeo);
    }    
    
    
    @Override 
    public void simpleUpdate(float tpf)
    {
        jupiterGeo.rotate(0.0f, 0.0f, 0.3f*tpf);
        
    }
}
