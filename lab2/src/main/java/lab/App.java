/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package lab;

import org.xml.sax.SAXException;

import javax.xml.parsers.ParserConfigurationException;
import javax.xml.stream.XMLStreamException;
import java.io.*;
import java.util.List;

public class App {
    public static void main(String[] args) throws IOException, SAXException, ParserConfigurationException, XMLStreamException {
        String xmlFile = "paper.xml";

        InputStream xmlStream = new FileInputStream(xmlFile);

        if(SchemaValidator.validateXml("paper.xsd", xmlStream))
            Logger.log("Validation success");
        else
        {
            Logger.log("Validation failure");
            return;
        }

        String parserType = args[0];

        xmlStream = new FileInputStream(xmlFile);
        String interestNode = "Paper";

        ParserInterface parser;

        switch (parserType) {
            case "1":
                parser = new SAXParser(xmlStream, interestNode);
                Logger.log("\nUsing SAX parser\n");
                break;
            case "2":
                parser = new DOMParser(xmlStream, interestNode);
                Logger.log("\nUsing DOM parser\n");
                break;
            default:
                parser = new StAXParser(xmlStream, interestNode);
                Logger.log("\nUsing StAX parser\n");
                break;
        }

        PaperParserHandler handler = new PaperParserHandler(parser);

        List<Paper> papers = handler.parse();
        for (Paper paper : papers) {
            Logger.log(paper.toString() + "\n");
        }

        PaperComparator paperComp = new PaperComparator();
        papers.sort(paperComp);

        for (Paper paper : papers) {
            Logger.log(paper.title + ", ");
        }
    }
}
