/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package lab;

import org.xml.sax.SAXException;

import javax.xml.parsers.ParserConfigurationException;
import javax.xml.stream.XMLStreamException;
import java.io.*;
import java.util.List;

public class App {
    public static void main(String[] args) throws IOException, SAXException, ParserConfigurationException, XMLStreamException {
        String xmlFile = "candy.xml";

        InputStream xmlStream = new FileInputStream(xmlFile);

        if(SchemaValidator.validateXml("candy.xsd", xmlStream))
            Logger.log("Validation success");
        else
        {
            Logger.log("Validation failure");
            return;
        }

        String parserType = args[0];

        xmlStream = new FileInputStream(xmlFile);
        String interestNode = "Candy";

        GeneralParserInterface parser;

        switch (parserType) {
            case "1":
                parser = new GeneralSAXParser(xmlStream, interestNode);
                Logger.log("\nUsing SAX parser\n");
                break;
            case "2":
                parser = new GeneralDOMParser(xmlStream, interestNode);
                Logger.log("\nUsing DOM parser\n");
                break;
            default:
                parser = new GeneralStAXParser(xmlStream, interestNode);
                Logger.log("\nUsing StAX parser\n");
                break;
        }

        CandyParserHandler handler = new CandyParserHandler(parser);

        List<Candy> candies = handler.parse();
        for (Candy candy : candies) {
            Logger.log(candy.toString());
        }

        CandyComparator candyc = new CandyComparator();
        candies.sort(candyc);

        for (Candy candy : candies) {
            Logger.log(candy.name);
        }
    }
}
